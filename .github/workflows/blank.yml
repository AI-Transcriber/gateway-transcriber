name: Docker Image CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    types: [opened, synchronize]

jobs:
  Cancel_previous_workflow_runs:
    runs-on: ubuntu-22.04
    permissions: write-all
    steps:
      - name: Cancel previous workflow runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  Build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Notify Discord
        if: github.event_name == 'push'
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD }}
          message: 'New commit pushed to main branch-${{ github.action_status }}'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: format code
        run: npm run format

  # Docker:
  #   needs: Build
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: gateway-repositoy
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY
          
  Deploy_AWS:
    runs-on: ubuntu-22.04
   
    steps:
      - name: Deploy to production AWS ECR
        if: github.event_name == 'push'
        run: echo "Deploying to production"
